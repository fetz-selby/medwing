// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dialog Component should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dialog
    id={1}
    message="show this"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="message-container"
        >
          <div
            className="message"
          >
            show this
          </div>
        </div>,
        <div
          className="action-container"
        >
          <div
            className="btn-link"
          >
            cancel
          </div>
          <button
            className="btn"
            onClick={[Function]}
          >
            continue
          </button>
        </div>,
      ],
      "className": "dialog-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="message"
          >
            show this
          </div>,
          "className": "message-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "show this",
            "className": "message",
          },
          "ref": null,
          "rendered": "show this",
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="btn-link"
            >
              cancel
            </div>,
            <button
              className="btn"
              onClick={[Function]}
            >
              continue
            </button>,
          ],
          "className": "action-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "cancel",
              "className": "btn-link",
              "onClick": undefined,
            },
            "ref": null,
            "rendered": "cancel",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "continue",
              "className": "btn",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "continue",
            "type": "button",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="message-container"
          >
            <div
              className="message"
            >
              show this
            </div>
          </div>,
          <div
            className="action-container"
          >
            <div
              className="btn-link"
            >
              cancel
            </div>
            <button
              className="btn"
              onClick={[Function]}
            >
              continue
            </button>
          </div>,
        ],
        "className": "dialog-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="message"
            >
              show this
            </div>,
            "className": "message-container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "show this",
              "className": "message",
            },
            "ref": null,
            "rendered": "show this",
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="btn-link"
              >
                cancel
              </div>,
              <button
                className="btn"
                onClick={[Function]}
              >
                continue
              </button>,
            ],
            "className": "action-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "cancel",
                "className": "btn-link",
                "onClick": undefined,
              },
              "ref": null,
              "rendered": "cancel",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "continue",
                "className": "btn",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "continue",
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
